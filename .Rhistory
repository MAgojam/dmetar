library(dmetar)
var.comp(m) -> res
mlm.variance.distribution(m)
dmetar::var.comp(m)
devtools::document()
?var.comp
devtools::document()
data("Chernobyl")
m2 = rma.mv(yi = z, V = var.z, data = Chernobyl, random = ~ 1 | author/es.id)
res = var.comp(m2)
res
plot(res)
library(dmetar)
pkgdown::build_site()
knitr::opts_chunk$set(echo = TRUE)
power.analysis(d = 0.18, k = 18, n1 = 50, n2 = 50, heterogeneity = "moderate")
power.analysis(d = 0.18, k = 18, n1 = 50, n2 = 50, heterogeneity = "moderate")
?multimodel.inference
multimodel.inference()
multimodel.inference
data('MVRegressionData')
library(metafor)
mmi = multimodel.inference(TE = 'yi', seTE = 'sei', data = MVRegressionData,
predictors = c('pubyear', 'quality',
'reputation', 'continent'))
?gosh.diagnostics
?InfluenceAnalysis
data("m.gosh")
res <- gosh.diagnostics(m.gosh, verbose = FALSE)
summary(res)
plot(res)
pkgdown::build_site()
devtools::document()
?Digman97
library(metaSEM)
?Digman97
load("~/Documents/R/dmetar/data/SleepProblems.rda")
SleepProblems
length(SleepProblems$data)
?tssem1
library(lavaan)
devtools::document()
?SleepProblems
library(dmetar)
pkgdown::build_site()
library(dmetar)
library(dmetar)
pool.groups(as.integer(10), 10, 10, 10, 10, 10)
library(dmetar)
pool.groups(0, 10, 10, 10, 10, 10)
pool.groups(-10, 10, 10, 10, 10, 10)
se.from.p(effect.size = -0.56, p = 0.05, N = 75,
effect.size.type= "difference", calculate.g = FALSE)
se.from.p(effect.size = c(-0.56, -0.56), p = 0.05, N = 75,
effect.size.type= "difference", calculate.g = FALSE)
se.from.p(effect.size = c(-0.56, 0.56), p = 0.05, N = 75,
effect.size.type= "difference", calculate.g = FALSE)
library(dmetar)
se.from.p(effect.size = c(-0.56, 0.56), p = 0.05, N = 75,
effect.size.type= "difference", calculate.g = FALSE)
0.2862047^2
sqrt(0.2862047)
as.integer(0.03)
library(dmetar)
se.from.p(effect.size = 0.71, p = 14, N = 75,
effect.size.type= "difference", calculate.g = TRUE)
se.from.p(effect.size = 0.71, p = -14, N = 75,
effect.size.type= "difference", calculate.g = TRUE)
se.from.p(effect.size = 0.71, p = 0.5, N = 75,
effect.size.type= "difference", calculate.g = TRUE)
se.from.p(effect.size = log10(1.4), p = 0.012, N = 75,
effect.size.type= "ratio")
se.from.p(effect.size = 0, p = 0.80, N = 75,
effect.size.type= "ratio")
library(dmetar)
se.from.p(effect.size = -0.1, p = 0.80, N = 75,
effect.size.type= "ratio")
se.from.p(effect.size = -0.1, p = 0.80, N = 75,
effect.size.type= "difference")
?message
d = c(-0.123, 0.234, 0.123, 1.234, 0.12)
CER = c(0.42, 0.35, 0.26, 0.21, 0.23)
NNT(d, CER)
d = c(-0.123, 0.234, 0.123, 1.234, 0.12)
CER = c(0.42, 0.35, 0.26, 0.21, 0.23)
NNT(d, CER) -> nnts
NNT = 1/((2 * pnorm(d/sqrt(2)) - 1))
class(NNT)
?NNT
NNT(0.3, 0.3, names = "Hello")
NNT(0.3, 0.3, names = "Hello") -> dfs
dfs
dfs$Name
class(NNT)
c("numeric", "NNT", "raw.unspecified") -> xy
xy[-1]
library(dmetar)
d = c(-0.123, 0.234, 0.123, 1.234, 0.12)
CER = c(0.42, 0.35, 0.26, 0.21, 0.23)
NNT(d, CER) -> nnts
nnts
as.numeric(nnts)
nnts+5
nnts[1]
nnts[4]
cbind(nnts, nnts)
x = nnts
x
sum(x < 0) > 0
NNT(0.3, 0.3, names = "Hello")
library(dmetar)
d = c(-0.123, 0.234, 0.123, 1.234, 0.12)
CER = c(0.42, 0.35, 0.26, 0.21, 0.23)
NNT(d, CER)
devtools::document()
rm(list = c("NNT"))
devtools::document()
devtools::document()
library(dmetar)
d = c(-0.123, 0.234, 0.123, 1.234, 0.12)
CER = c(0.42, 0.35, 0.26, 0.21, 0.23)
NNT(d, CER)
d = c(-0.123, 0.234, 0.123, 1.234, 0.12)
CER = c(0.42, 0.35, 0.26, 0.21, 0.23)
NNT(d, CER) -> f
f
class(f)
library(dmetar)
d = c(-0.123, 0.234, 0.123, 1.234, 0.12)
CER = c(0.42, 0.35, 0.26, 0.21, 0.23)
NNT(d, CER)
d = c(-0.123, 0.234, 0.123, 1.234, 0.12)
CER = c(0.42, 0.35, 0.26, 0.21, 0.23)
NNT(d, CER) -> nnts
nnts
d = c(-0.123, 0.234, 0.123, 1.234, 0.12)
CER = c(0.42, 0.35, 0.26, 0.21, 0.23)
NNT(d) -> nnts
nnts
nnts
letters
letters[1:5]
d = c(-0.123, 0.234, 0.123, 1.234, 0.12)
CER = c(0.42, 0.35, 0.26, 0.21, 0.23)
NNT(d, names = letters[1:5]) -> nnts
nnts
qnorm(0.975)
NNT(0.0002)
NNT(0.0002) -> d
d
NNT(event.e= 7, n.e=101, event.c= 10, n.c= 103, names="a")
NNT(event.e= 7, n.e=101, event.c= 10, n.c= 103, names="a", method = "furukawa")
NNT(event.e= 7, n.e=101, event.c= 10, n.c= 103, names="a", method = "Furukawa")
NNT(event.e= 7, n.e=101, event.c= 10, n.c= 103, names="a", method = "KraemerKupfer")
class(NNT(event.e= 7, n.e=101, event.c= 10, n.c= 103, names="a", method = "KraemerKupfer"))
library(dmetar)
NNT(event.e= 7, n.e=101, event.c= 10, n.c= 103, names="a")
NNT(event.e= 7, n.e=101, event.c= 10, n.c= 103, names="a", method = "KraemerKupfer")
NNT(event.e= 7, n.e=101, event.c= 10, n.c= 103, names="a", method = "Furukawa")
class(NNT(event.e= 7, n.e=101, event.c= 10, n.c= 103, names="a", method = "Furukawa"))
library(dmetar)
NNT(event.e= 7, n.e=101, event.c= 10, n.c= 103, names="a", method = "Furukawa")
NNT(event.e= 7, n.e=101, event.c= 10, n.c= 103, names="a", method = "Furukawa")
NNT(event.e= 7, n.e=101, event.c= 10, n.c= 103, method = "Furukawa")
NNT(0.5, 0.3, names="a", method = "Furukawa")
NNT(0.5, 0.3, method = "Furukawa")
library(dmetar)
NNT(event.e= 7, n.e=101, event.c= 10, n.c= 103, names="a")
NNT(event.e= 7, n.e=101, event.c= 10, n.c= 103, names="a", method = "Furukawa")
class(NNT(event.e= 7, n.e=101, event.c= 10, n.c= 103, names="a", method = "Furukawa"))
library(dmetar)
class(NNT(event.e= 7, n.e=101, event.c= 10, n.c= 103, names="a", method = "Furukawa"))
NNT(event.e= 7, n.e=101, event.c= 10, n.c= 103, names="a", method = "Furukawa")
NNT(event.e= 7, n.e=101, event.c= 10, n.c= 103, method = "Furukawa")
class(NNT(event.e= 7, n.e=101, event.c= 10, n.c= 103, method = "Furukawa"))[3]
library(dmetar)
class(NNT(event.e= 7, n.e=101, event.c= 10, n.c= 103, method = "Furukawa"))
NNT(event.e= 7, n.e=101, event.c= 10, n.c= 103, method = "Furukawa")
NNT(event.e= 7, n.e=101, event.c= 10, n.c= 103, method = "Furukawa", names = "a")
class(NNT(event.e= 7, n.e=101, event.c= 10, n.c= 103, method = "Furukawa", names = "a"))
class(NNT(event.e= 7, n.e=101, event.c= 10, n.c= 103, method = "Furukawa", names = "a"))[2]
class(NNT(event.e= 7, n.e=101, event.c= 10, n.c= 103, method = "Furukawa", names = "a"))[3]
NNT(event.e= 7, n.e=101, event.c= 10, n.c= 103, method = "Furukawa", names = "a")
NNT(event.e= 7, n.e=101, event.c= 2, n.c= 103, method = "Furukawa", names = "a")
NNT(-0.5, 0.3, method = "Furukawa", names = "a")
NNT(-0.5, 0.3, method = "Furukawa")
class(NNT(-0.5, 0.3, method = "Furukawa"))
class(NNT(-0.5, 0.3, method = "Furukawa", names = "a"))
library(dmetar)
class(NNT(-0.5, 0.3, method = "Furukawa", names = "a"))
NNT(-0.5, 0.3, method = "Furukawa", names = "a")
class(NNT(-0.5, 0.3, method = "Furukawa", names = "a")$NNT)
library(dmetar)
class(NNT(-0.5, 0.3, method = "Furukawa", names = "a")$NNT)
NNT(-0.5, 0.3, method = "Furukawa", names = "a")
class(NNT)
NNT(-0.5, 0.3, method = "Furukawa", names = "a")
library(dmetar)
NNT(-0.5, 0.3, method = "Furukawa", names = "a")
NNT(-0.5, 0.3, method = "Furukawa", names = "a")$NNT
class(NNT(-0.5, 0.3, method = "Furukawa", names = "a"))
library(dmetar)
class(NNT(-0.5, 0.3, method = "Furukawa", names = "a"))
NNT(-0.5, 0.3, method = "Furukawa", names = "a")
library(dmetar)
NNT(-0.5, 0.3, method = "Furukawa", names = "a")
NNT(-0.5, 0.3, method = "Furukawa")
NNT(-0.5, 0.3, method = "KraemerKupfer")
NNT(-0.5, 0.3, method = "KraemerKupfer", names = "a")
NNT(-0.5, 0.3, method = "KraemerKupfer", names = "ABC")
NNT(event.e= 0, n.e=101, event.c= 0, n.c= 103)
NNT(event.e= 20, n.e=101, event.c= 25, n.c= 103)
NNT(event.e= 20, n.e=101, event.c= 25, n.c= 103, names = "a")
NNT(event.e= 20, n.e=101, event.c= 25, n.c= 103, names = "ABC", method = "Furukawa")
NNT(event.e= 20, n.e=101, event.c= 25, n.c= 103, names = "ABC", method = "Furukawa") -> m
m
m$NNT
NNT(-3, names= "a")
NNT(-3, names= "a") -> m
m
NNT(d, CER=0.38, names=c("a", "b", "c", "d", "e"))
d = c(-0.127, 0.23, 1.23, 1.234, 3.12)
NNT(d)
NNT(d, CER=0.38, names=c("a", "b", "c", "d", "e"))
CER= c(0.3,0.4,0.5,0.6,0.7)
NNT(d, CER, names=c("a", "b", "c", "d", "e"))
0.3L
0.3L
NNT(d, CER, names=c("a", "b", "c", "d", "e"))
NNT(d= 2.2, CER= 0)
NNT(d= 2.2, method = "Furukawa")
NNT(d= 2.2, CER = "h", method = "Furukawa")
is.numeric(0.2)
is.numeric(as.double(0.2))
is.numeric(as.integer(0.2))
library(dmetar)
library(dmetar)
NNT(d= 2.2, CER = "h", method = "Furukawa")
NNT(d= 2.2, CER = 0.3, method = "Furukawa")
NNT(d= -2.2, CER = "h", method = "Furukawa")
NNT(d= -2.2, CER = 0.3, method = "Furukawa")
NNT(d= -2.2, CER = 0.3, method = "Furukawa", names = "Hallo")
NNT(d= -2.2, CER = 30, method = "Furukawa", names = "Hallo")
NNT(d= -2.2, CER = 30, method = "Furukawa", names = "Hallo")
library(dmetar)
library(dmetar)
NNT(d= -2.2, CER = 30, method = "Furukawa", names = "Hallo")
NNT(d= -2.2, CER = 0.3, method = "Furukawa", names = "Hallo")
NNT(d= -2.2, CER = -0.3, method = "Furukawa", names = "Hallo")
?print.NNT
NNT(d= 3.1, CER= 0.6, method= "KraemerKupfer")
NNT(d= 3.1, CER= 0.6, method= "KraemerKupfer") -> m
m
as.numeric(m)
TherapyFormatsGeMTC$data
library(dmetar)
data(ThirdWave)
# Create 'meta' meta-analysis object
suppressPackageStartupMessages(library(meta))
meta = metagen(TE, seTE, studlab = paste(ThirdWave$Author), data=ThirdWave)
# Run influence analysis; specify to return separate plots when plotted
inf.an = InfluenceAnalysis(meta, return.separate.plots = TRUE)
# Show results in console
inf.an
plot(inf.an)
round(0.38, 2)*100,nsmall = 0)
round(0.38, 2)*100,nsmall = 0))
format(round(0.38, 2)*100,nsmall = 0)
data(ThirdWave)
# Create 'meta' meta-analysis object
suppressPackageStartupMessages(library(meta))
meta = metagen(TE, seTE, studlab = paste(ThirdWave$Author), data=ThirdWave)
# Run influence analysis; specify to return separate plots when plotted
inf.an = InfluenceAnalysis(meta, return.separate.plots = TRUE)
# Show results in console
plot(inf.an)
library(dmetar)
data(ThirdWave)
# Create 'meta' meta-analysis object
suppressPackageStartupMessages(library(meta))
meta = metagen(TE, seTE, studlab = paste(ThirdWave$Author), data=ThirdWave)
# Run influence analysis; specify to return separate plots when plotted
inf.an = InfluenceAnalysis(meta, return.separate.plots = TRUE)
# Show results in console
plot(inf.an)
?NNT
x$vp
d = c(-0.123, 0.234, 0.123, 1.234, 0.12)
NNT(d)
NNT(3)
dmetar::NNT(3)
?missing
NNT(d=0.3)
NNT(d=0.3, CER = 5)
NNT(d=0.3, CER = 02)
NNT(d=0.3, CER = 0--2)
NNT(d=0.3, CER = 0.2)
NNT(3)
NNT = function (d, CER = NULL, event.e, n.e, event.c, n.c, names, method)
{
if (!missing(CER) & is.numeric(CER)){
if (CER < 0 | CER > 1){
stop("'CER' range must be between 0 and 1.")
}
}
if (missing(event.e)) {
if (missing(CER)) {
NNT = 1/((2 * pnorm(d/sqrt(2)) - 1))
class(NNT) = c("NNT", "kk", "numeric")
}
else {
if (missing(method)) {
NNT = 1/(pnorm(d + qnorm(CER)) - CER)
class(NNT) = c("NNT", "fl", "numeric")
}
else {
if (method == "KraemerKupfer") {
NNT = 1/((2 * pnorm(d/sqrt(2)) - 1))
class(NNT) = c("NNT", "kk", "numeric")
}
else {
}
if (method == "Furukawa") {
if (missing(CER) | class(CER) != "numeric") {
stop("To use Furukawa's method, provide a numeric value for CER. \n")
}
else {
NNT = 1/(pnorm(d + qnorm(CER)) - CER)
class(NNT) = c("NNT", "fl", "numeric")
}
}
else {
}
}
}
}
else {
if (class(event.e) == "numeric" & missing(d)) {
EER = event.e/n.e
CER = event.c/n.c
NNT = abs(1/(EER - CER))
class(NNT) = c("NNT", "raw", "numeric")
if (missing(method)) {
}
else {
if (method %in% c("KraemerKupfer", "Furukawa")) {
class(NNT) = c("NNT", "unspecified", "numeric")
}
else {
}
}
}
}
if (missing(names)) {
return(NNT)
}
else {
data = data.frame(Name = names, NNT = NNT)
class(data) = c(class(NNT)[1:2], "data.frame")
class(data$NNT) = "numeric"
NNT = data
return(NNT)
}
}
NNT(3)
NNT(0.3)
NNT(3) -> m
m
?NNT
library(dmetar)
NNT(event.e = 10, event.c = 20, n.e = 200, n.c = 200)
d = c(-0.123, 0.234, 0.123, 1.234, 0.12)
NNT(d)
d = c(-0.123, 0.234, 0.123, 1.234, 0.12)
CER = c(0.42, 0.35, 0.26, 0.21, 0.23)
NNT(d, CER)
sum(CER < 0 | CER > 1)
library(dmetar)
d = c(-0.123, 0.234, 0.123, 1.234, 0.12)
NNT(d)
d = c(-0.123, 0.234, 0.123, 1.234, 0.12)
CER = c(0.42, 0.35, 0.26, 0.21, 0.23)
NNT(d, CER)
d = c(-0.123, 0.234, 0.123, 1.234, 0.12)
CER = c(0.42, 0.35, 0.26, 0.21, 1.1)
NNT(d, CER)
d = c(-0.123, 0.234, 0.123, 1.234, 0.12)
CER = c(0.42, 0.35, 0.26, 0.21, 1)
NNT(d, CER)
d = c(-0.123, 0.234, 0.123, 1.234, 0.12)
CER = c(0.42, 0.35, 0.26, 0.21, 1)
NNT(d, CER) -> m
m
NNT(event.e = 10, event.c = 20, n.e = 200, n.c = 200)
NNT(event.e = 20, event.c = 20, n.e = 200, n.c = 200)
?InfluenceAnalysis
data(ThirdWave)
# Create 'meta' meta-analysis object
suppressPackageStartupMessages(library(meta))
meta = metagen(TE, seTE, studlab = paste(ThirdWave$Author), data=ThirdWave)
# Run influence analysis; specify to return separate plots when plotted
inf.an = InfluenceAnalysis(meta, return.separate.plots = TRUE)
plot(inf.an, "ES")
?se.from.p
se.from.p(effect.size = 0.71, p = 0.013, N = 75,
effect.size.type= "difference", calculate.g = TRUE)
effect.size = c(0.91, 1.01, 0.72, 0.43)
p = c(0.05, 0.031, 0.001, 0.09)
N = c(120, 86, 450, 123)
se.from.p(effect.size = effect.size, p = p, N = N,
effect.size.type = "ratio")
p = c(0.1, 0.2, 0.3)
p < 0 | p > 1
sum(p < 0 | p > 1) > 0
ES.type = "ratio"
ES = c(1,2,3)
sum(ES < 0) > 0
ES.type == "ratio" & sum(ES < 0) > 0
library(dmetar)
effect.size = c(0.91, 1.01, 0.72, 0.43)
p = c(0.05, 0.031, 0.001, 0.09)
N = c(120, 86, 450, 123)
se.from.p(effect.size = effect.size, p = p, N = N,
effect.size.type = "ratio")
effect.size = c(0.91, 1.01, 0.72, 0.43)
p = c(0.05, 0.031, 0.001, 0.09)
N = c(120, 86, 450, 123)
se.from.p(effect.size = effect.size, p = p)
effect.size = c(0.91, 1.01, 0.72, 0.43)
p = c(0.05, 0.031, 0.001, 0.09)
N = c(120, 86, 450, 123)
se.from.p(effect.size = effect.size, p = p, N = N)
pkgdown::build_site()
?InfluenceAnalysis
## Not run:
# Load 'ThirdWave' data
data(ThirdWave)
# Create 'meta' meta-analysis object
suppressPackageStartupMessages(library(meta))
meta = metagen(TE, seTE, studlab = paste(ThirdWave$Author), data=ThirdWave)
# Run influence analysis; specify to return separate plots when plotted
inf.an = InfluenceAnalysis(meta, return.separate.plots = TRUE)
plot(inf.an, "ES")
plot(inf.an, "ES")
plot(inf.an, "I2")
format(round(0.456, 2)*100,nsmall = 0)
format(round(0.456, 2),nsmall = 2)
?metainc
minc = metainc(event.e, time.e, event.c, time.c, data = EatingDisorderPrevention)
minc
InfluenceAnalysis(minc) -> infan
minc = metainc(event.e, time.e, event.c, time.c, data = EatingDisorderPrevention, studlab = author)
minc = metainc(event.e, time.e, event.c, time.c, data = EatingDisorderPrevention, studlab = Author)
InfluenceAnalysis(minc) -> infan
plot(infan, "ES")
plot(infan, "I2")
InfluenceAnalysis(minc, random = T) -> infan
plot(infan, "I2")
load("~/Documents/R/dmetar/data/TherapyFormats.rda")
#i = sample(1:nrow(TherapyFormats), 1)
TherapyFormats[182, "TE"] = -0.231
TherapyFormats[182, "TE"]
library(netmeta)
m.netmeta <- netmeta(TE = TE,
seTE = seTE,
treat1 = treat1,
treat2 = treat2,
studlab = author,
data = TherapyFormats,
sm = "SMD",
comb.fixed = TRUE,
comb.random = FALSE,
reference.group = "cau",
details.chkmultiarm = TRUE,
sep.trts = " vs ")
m.netmeta
summary(m.netmeta)
TherapyFormats[182, "TE"]
save(TherapyFormats, file = "data/TherapyFormats.rda")
load("~/Documents/R/dmetar/data/TherapyFormats.rda")
TherapyFormats[182, "TE"]
load("~/Documents/R/dmetar/data/TherapyFormats.rda")
TherapyFormats[182, "TE"]
library(MuMIn)
library(dmetar)
data('MVRegressionData')
library(metafor)
library(dmetar)
mmi = multimodel.inference(TE = 'yi', seTE = 'sei', data = MVRegressionData,
predictors = c('pubyear', 'quality',
'reputation', 'continent'))
mmi
pkgdown::build_site()
devtools::document()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
